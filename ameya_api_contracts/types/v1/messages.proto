syntax = "proto3";
package ameya_api_contracts.types.v1;

// Audio format for the conversation between advisor and caller
// Sample rate is the number of samples per second
// Channels is the number of audio channels
// Sample width is the number of bytes per sample
// Example: 16 bit PCM audio with 2 channels and 44100 sample rate
// will have sample_rate = 44100, channels = 2, sample_width = 2
message PCM{
  int32 sample_rate = 1;
  int32 channels = 2;
  int32 sample_width = 3;
}

// Verification of the conversation between advisor and caller
message Verification {
  // Id of the conversation
  string call_id = 1;
}

// Request for the server to start the audio stream
// Oneof is used to send either metadata or audio data
// Metadata is sent at the start of the stream
// Audio data is sent after the metadata
// Example: The header of a wave file will be the metadata
// and the actual audio data will be the audio data
// The server will interpret the metadata and audio data
// and process the audio data accordingly
message StreamAudioRequest {
    // Oneof is used to send either metadata or audio data
    // Metadata is sent at the start of the stream
    // Audio data is sent after the metadata
    oneof data {
        AudioMetaData metadata = 1; // Metadata sent at the start
        AudioChunk audio_data = 2; // Actual audio data
    }
}

// Metadata of the audio stream
// advisor_id is the id of the advisor
// caller_id is the id of the caller
// chunk_size is the size of the audio data chunks
// pcm_format is the format of the audio data
message AudioMetaData {
  string advisor_id = 1;
  string caller_id = 2;
  int32 chunk_size = 3;
  PCM pcm_format = 4;
}

// Audio data of the conversation between advisor and caller
// audio_advisor is the audio data of the advisor
// audio_caller is the audio data of the caller
// The server will interpret the audio data and process it accordingly
message AudioChunk {
  bytes audio_advisor = 1;
  bytes audio_caller = 2;
}
